[{"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\index.js":"1","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\App.js":"2","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Landing.js":"4","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\auth\\Register.js":"5","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\auth\\Login.js":"6","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\store.js":"7","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\index.js":"8","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\alert.js":"9","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\types.js":"10","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\alert.js":"11","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Alert.js":"12","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\auth.js":"13","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\auth.js":"14","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\utils\\setAuthToken.js":"15","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\routing\\PrivateRoute.js":"17","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\profile.js":"18","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\profile.js":"19","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Spinner.js":"20","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js":"22","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js":"23","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js":"24","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js":"25","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Experience.js":"26","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Education.js":"27","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profiles\\Profiles.js":"28","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profiles\\ProfileItem.js":"29","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\Profile.js":"30","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\ProfileEducation.js":"31","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\ProfileAbout.js":"32","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\ProfileTop.js":"33","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\ProfileExperience.js":"34","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\ProfileGithub.js":"35","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\posts\\Posts.js":"36","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\post.js":"37","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\post.js":"38","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\posts\\PostItem.js":"39","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\posts\\PostForm.js":"40","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\post\\Post.js":"41"},{"size":197,"mtime":1608382087287,"results":"42","hashOfConfig":"43"},{"size":2548,"mtime":1611137153537,"results":"44","hashOfConfig":"43"},{"size":1621,"mtime":1610773662472,"results":"45","hashOfConfig":"43"},{"size":1220,"mtime":1609570897279,"results":"46","hashOfConfig":"43"},{"size":2966,"mtime":1609327224032,"results":"47","hashOfConfig":"43"},{"size":1963,"mtime":1609327229508,"results":"48","hashOfConfig":"43"},{"size":399,"mtime":1608900354467,"results":"49","hashOfConfig":"43"},{"size":243,"mtime":1610773847556,"results":"50","hashOfConfig":"43"},{"size":393,"mtime":1608979144869,"results":"51","hashOfConfig":"43"},{"size":952,"mtime":1611136698494,"results":"52","hashOfConfig":"43"},{"size":370,"mtime":1609085344700,"results":"53","hashOfConfig":"43"},{"size":522,"mtime":1609084481196,"results":"54","hashOfConfig":"43"},{"size":2081,"mtime":1609572876469,"results":"55","hashOfConfig":"43"},{"size":1125,"mtime":1610025455101,"results":"56","hashOfConfig":"43"},{"size":253,"mtime":1609261003102,"results":"57","hashOfConfig":"43"},{"size":1972,"mtime":1610534645384,"results":"58","hashOfConfig":"43"},{"size":593,"mtime":1609426584817,"results":"59","hashOfConfig":"43"},{"size":5572,"mtime":1610534983280,"results":"60","hashOfConfig":"43"},{"size":1055,"mtime":1610204208692,"results":"61","hashOfConfig":"43"},{"size":241,"mtime":1609572032371,"results":"62","hashOfConfig":"43"},{"size":6917,"mtime":1609777920198,"results":"63","hashOfConfig":"43"},{"size":678,"mtime":1609777613178,"results":"64","hashOfConfig":"43"},{"size":8196,"mtime":1610534684228,"results":"65","hashOfConfig":"43"},{"size":3477,"mtime":1610535066875,"results":"66","hashOfConfig":"43"},{"size":3541,"mtime":1610535046641,"results":"67","hashOfConfig":"43"},{"size":1370,"mtime":1610025635035,"results":"68","hashOfConfig":"43"},{"size":1356,"mtime":1610025891928,"results":"69","hashOfConfig":"43"},{"size":1286,"mtime":1610534889203,"results":"70","hashOfConfig":"43"},{"size":1025,"mtime":1610534939272,"results":"71","hashOfConfig":"43"},{"size":2788,"mtime":1610700460793,"results":"72","hashOfConfig":"43"},{"size":810,"mtime":1610776123005,"results":"73","hashOfConfig":"43"},{"size":849,"mtime":1610776257504,"results":"74","hashOfConfig":"43"},{"size":1454,"mtime":1610700460799,"results":"75","hashOfConfig":"43"},{"size":775,"mtime":1610776206652,"results":"76","hashOfConfig":"43"},{"size":1620,"mtime":1610777647289,"results":"77","hashOfConfig":"43"},{"size":1066,"mtime":1611065069240,"results":"78","hashOfConfig":"43"},{"size":2572,"mtime":1611136771909,"results":"79","hashOfConfig":"43"},{"size":1257,"mtime":1611136818420,"results":"80","hashOfConfig":"43"},{"size":2286,"mtime":1611137552017,"results":"81","hashOfConfig":"43"},{"size":1021,"mtime":1611065134906,"results":"82","hashOfConfig":"43"},{"size":916,"mtime":1611137722104,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"ipvjoz",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"86"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\index.js",[],["175","176"],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\App.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\store.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\index.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\alert.js",["177"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\types.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\alert.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\auth.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\auth.js",["178"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\profile.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\profile.js",["179"],"import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Spinner.js",["180"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img src={spinner} style={{ width: '200px', margin: 'auto', display: 'block' }} alt='loading' />\r\n  </Fragment>\r\n);\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js",["181"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    });\r\n  }, [loading, getCurrentProfile]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>Give us an idea of where you are at in your career</small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>Could be your own company or one you work for</small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>Could be your own or a company website</small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>City & state suggested (eg. Boston, MA)</small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => {\r\n              toggleSocialInputs(!displaySocialInputs);\r\n            }}\r\n            type='button'\r\n            className='btn btn-light'>\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js",["182"],"import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class='large text-primary'>Add An Experience</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any developer/programming positions that you have had\r\n        in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        class='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input type='date' name='from' value={from} onChange={(e) => onChange(e)} />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              checked={current}\r\n              name='current'\r\n              value=''\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <a class='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js",["183"],"import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { school, degree, fieldofstudy, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add Your Education</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch'></i> Add any school/bootcamp that you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input type='date' name='from' value={from} onChange={(e) => onChange(e)} />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              checked={current}\r\n              name='current'\r\n              value=''\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Study\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <a className='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Education.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profiles\\Profiles.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profiles\\ProfileItem.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\Profile.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\ProfileEducation.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\ProfileAbout.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\ProfileTop.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\ProfileExperience.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile\\ProfileGithub.js",["184"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport { getGithubRepos } from '../../actions/profile';\r\n\r\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\r\n  useEffect(() => {\r\n    getGithubRepos(username);\r\n  }, [getGithubRepos]);\r\n\r\n  return (\r\n    <div className='profile-github'>\r\n      <h2 className='text-primary my-1'>Github Repositories</h2>\r\n      {repos === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        repos.map((repo) => (\r\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\r\n            <div>\r\n              <h4>\r\n                <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\r\n                  {repo.name}\r\n                </a>\r\n              </h4>\r\n\r\n              <p>{repo.description}</p>\r\n            </div>\r\n\r\n            <div>\r\n              <ul>\r\n                <li className='badge badge-primary'>Stars: {repo.stargazers_count}</li>\r\n                <li className='badge badge-dark'>Watchers: {repo.watchers_count}</li>\r\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileGithub.propTypes = {\r\n  getGithubRepos: PropTypes.func.isRequired,\r\n  repos: PropTypes.array.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  repos: state.profile.repos,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\posts\\Posts.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\post.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\post.js",["185"],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\posts\\PostItem.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\posts\\PostForm.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\post\\Post.js",["186"],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":4,"column":1,"nodeType":"193","endLine":17,"endColumn":2},{"ruleId":"191","severity":1,"message":"192","line":19,"column":1,"nodeType":"193","endLine":56,"endColumn":2},{"ruleId":"191","severity":1,"message":"192","line":18,"column":1,"nodeType":"193","endLine":57,"endColumn":2},{"ruleId":"191","severity":1,"message":"194","line":4,"column":1,"nodeType":"193","endLine":8,"endColumn":3},{"ruleId":"195","severity":1,"message":"196","line":47,"column":6,"nodeType":"197","endLine":47,"endColumn":34,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":78,"column":15,"nodeType":"201","endLine":78,"endColumn":30},{"ruleId":"199","severity":1,"message":"200","line":77,"column":15,"nodeType":"201","endLine":77,"endColumn":30},{"ruleId":"195","severity":1,"message":"202","line":10,"column":6,"nodeType":"197","endLine":10,"endColumn":22,"suggestions":"203"},{"ruleId":"191","severity":1,"message":"192","line":17,"column":1,"nodeType":"193","endLine":68,"endColumn":2},{"ruleId":"195","severity":1,"message":"204","line":12,"column":6,"nodeType":"197","endLine":12,"endColumn":15,"suggestions":"205"},"no-native-reassign",["206"],"no-negated-in-lhs",["207"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'setFormData' needs the current value of 'profile.company', you can also switch to useReducer instead of useState and read 'profile.company' in the reducer.","ArrayExpression",["208"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["209"],"React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.",["210"],"no-global-assign","no-unsafe-negation",{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",{"range":"217","text":"218"},"Update the dependencies array to be: [getGithubRepos, username]",{"range":"219","text":"220"},"Update the dependencies array to be: [getPost, match.params.id]",{"range":"221","text":"222"},[1691,1719],"[loading, getCurrentProfile, profile.company, profile.website, profile.location, profile.status, profile.skills, profile.githubusername, profile.bio, profile.social]",[344,360],"[getGithubRepos, username]",[428,437],"[getPost, match.params.id]"]