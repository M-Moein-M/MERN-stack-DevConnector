[{"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\index.js":"1","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\App.js":"2","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Navbar.js":"3","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Landing.js":"4","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\auth\\Register.js":"5","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\auth\\Login.js":"6","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\store.js":"7","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\index.js":"8","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\alert.js":"9","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\types.js":"10","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\alert.js":"11","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Alert.js":"12","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\auth.js":"13","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\auth.js":"14","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\utils\\setAuthToken.js":"15","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Dashboard.js":"16","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\routing\\PrivateRoute.js":"17","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\profile.js":"18","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\profile.js":"19","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Spinner.js":"20","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js":"21","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js":"22","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js":"23","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js":"24","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js":"25","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Experience.js":"26","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Education.js":"27","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profiles\\Profiles.js":"28","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profiles\\ProfileItem.js":"29"},{"size":197,"mtime":1608382087287,"results":"30","hashOfConfig":"31"},{"size":2132,"mtime":1610363996156,"results":"32","hashOfConfig":"31"},{"size":1556,"mtime":1610364073912,"results":"33","hashOfConfig":"31"},{"size":1220,"mtime":1609570897279,"results":"34","hashOfConfig":"31"},{"size":2966,"mtime":1609327224032,"results":"35","hashOfConfig":"31"},{"size":1963,"mtime":1609327229508,"results":"36","hashOfConfig":"31"},{"size":399,"mtime":1608900354467,"results":"37","hashOfConfig":"31"},{"size":206,"mtime":1609510222758,"results":"38","hashOfConfig":"31"},{"size":393,"mtime":1608979144869,"results":"39","hashOfConfig":"31"},{"size":710,"mtime":1610204128799,"results":"40","hashOfConfig":"31"},{"size":370,"mtime":1609085344700,"results":"41","hashOfConfig":"31"},{"size":522,"mtime":1609084481196,"results":"42","hashOfConfig":"31"},{"size":2081,"mtime":1609572876469,"results":"43","hashOfConfig":"31"},{"size":1125,"mtime":1610025455101,"results":"44","hashOfConfig":"31"},{"size":253,"mtime":1609261003102,"results":"45","hashOfConfig":"31"},{"size":1955,"mtime":1610026568734,"results":"46","hashOfConfig":"31"},{"size":593,"mtime":1609426584817,"results":"47","hashOfConfig":"31"},{"size":5584,"mtime":1610204132355,"results":"48","hashOfConfig":"31"},{"size":1055,"mtime":1610204208692,"results":"49","hashOfConfig":"31"},{"size":241,"mtime":1609572032371,"results":"50","hashOfConfig":"31"},{"size":6917,"mtime":1609777920198,"results":"51","hashOfConfig":"31"},{"size":678,"mtime":1609777613178,"results":"52","hashOfConfig":"31"},{"size":8177,"mtime":1609777912058,"results":"53","hashOfConfig":"31"},{"size":3471,"mtime":1609847267378,"results":"54","hashOfConfig":"31"},{"size":3535,"mtime":1610026313800,"results":"55","hashOfConfig":"31"},{"size":1370,"mtime":1610025635035,"results":"56","hashOfConfig":"31"},{"size":1356,"mtime":1610025891928,"results":"57","hashOfConfig":"31"},{"size":1322,"mtime":1610366510635,"results":"58","hashOfConfig":"31"},{"size":1018,"mtime":1610367231094,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"ipvjoz",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\index.js",[],["128","129"],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\App.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\store.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\index.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\alert.js",["130"],"import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\types.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\alert.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\auth.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\auth.js",["131"],"import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  ACCOUNT_DELETED,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n    case ACCOUNT_DELETED:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Dashboard.js",["132"],"import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteAccount, getCurrentProfile } from '../../actions/profile';\r\nimport React, { Fragment, useEffect } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\n\r\nconst Dashboard = ({\r\n  getCurrentProfile,\r\n  auth: { user },\r\n  profile: { profile, loading },\r\n  deleteAccount,\r\n}) => {\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n  }, []);\r\n  return loading && profile == null ? (\r\n    <Spinner />\r\n  ) : (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Dashboard</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Welcome {user && user.name}\r\n      </p>\r\n      {profile !== null ? (\r\n        <Fragment>\r\n          <DashboardActions />\r\n          <Experience experience={profile.experience} />\r\n          <Education education={profile.education} />\r\n\r\n          <div className='my-2'>\r\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\r\n              <i className='fas fa-user-minus'></i> Delete My Account\r\n            </button>\r\n          </div>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <p>You can create your profile right here </p>\r\n          <Link to='/create-profile' className='btn btn-primary my-1'>\r\n            Create Profile\r\n          </Link>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nDashboard.prototype = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  deleteAccount: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\actions\\profile.js",["133"],"import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  CLEAR_PROFILE,\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from './types';\r\n\r\n// get current user's profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/profile/me');\r\n\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// get all profiles\r\nexport const getProfiles = () => async (dispatch) => {\r\n  // avoid flashing user's previous profile\r\n  dispatch({ type: CLEAR_PROFILE });\r\n\r\n  try {\r\n    const res = await axios.get('/api/profile');\r\n\r\n    dispatch({ type: GET_PROFILES, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// get profile by id\r\nexport const getProfileById = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/user/${userId}`);\r\n\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// get GitHub repos\r\nexport const getGithubRepos = (username) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/github/${username}`);\r\n\r\n    dispatch({ type: GET_REPOS, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// create or update a profile\r\nexport const createProfile = (formData, history, edit = false) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.post('/api/profile', formData, config);\r\n\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n    dispatch(setAlert(edit ? 'Profile updated' : 'Profile created', 'success'));\r\n\r\n    if (!edit) {\r\n      history.push('/dashboard');\r\n    }\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// add experience\r\nexport const addExperience = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/experience', formData, config);\r\n\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n    dispatch(setAlert('Experience added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// add education\r\nexport const addEducation = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    const res = await axios.put('/api/profile/education', formData, config);\r\n\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n    dispatch(setAlert('Education added', 'success'));\r\n\r\n    history.push('/dashboard');\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// delete experience\r\nexport const deleteExperience = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n\r\n    dispatch(setAlert('Experience removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// delete experience\r\nexport const deleteEducation = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data });\r\n\r\n    dispatch(setAlert('Education removed', 'success'));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PROFILE_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// delete account and profile\r\nexport const deleteAccount = () => async (dispatch) => {\r\n  if (window.confirm('Deleting account can NOT be undone. Confirm to proceed.')) {\r\n    try {\r\n      const res = await axios.delete('/api/profile');\r\n\r\n      dispatch({ type: CLEAR_PROFILE });\r\n      dispatch({ type: ACCOUNT_DELETED });\r\n\r\n      dispatch(setAlert('Your account has been deleted'));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PROFILE_ERROR,\r\n        payload: { msg: err.response.statusText, status: err.response.status },\r\n      });\r\n    }\r\n  }\r\n};\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\reducers\\profile.js",["134"],"import {\r\n  GET_PROFILE,\r\n  PROFILE_ERROR,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE,\r\n  GET_PROFILES,\r\n  GET_REPOS,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: [],\r\n  repos: [],\r\n  loading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case GET_PROFILE:\r\n    case UPDATE_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case GET_PROFILES:\r\n      return {\r\n        ...state,\r\n        profiles: payload,\r\n        loading: false,\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: payload,\r\n        loading: false,\r\n      };\r\n    case PROFILE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n        repos: [],\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\layout\\Spinner.js",["135"],"import React, { Fragment } from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default () => (\r\n  <Fragment>\r\n    <img src={spinner} style={{ width: '200px', margin: 'auto', display: 'block' }} alt='loading' />\r\n  </Fragment>\r\n);\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\EditProfile.js",["136"],"import React, { Fragment, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    website: '',\r\n    location: '',\r\n    status: '',\r\n    skills: '',\r\n    githubusername: '',\r\n    bio: '',\r\n    twitter: '',\r\n    facebook: '',\r\n    linkedin: '',\r\n    youtube: '',\r\n    instagram: '',\r\n  });\r\n\r\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      company: loading || !profile.company ? '' : profile.company,\r\n      website: loading || !profile.website ? '' : profile.website,\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      status: loading || !profile.status ? '' : profile.status,\r\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n      githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n      twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n      facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n      linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n      youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n      instagram: loading || !profile.social ? '' : profile.social.instagram,\r\n    });\r\n  }, [loading]);\r\n\r\n  const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram,\r\n  } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some information to make your profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\r\n            <option value='0'>* Select Professional Status</option>\r\n            <option value='Developer'>Developer</option>\r\n            <option value='Junior Developer'>Junior Developer</option>\r\n            <option value='Senior Developer'>Senior Developer</option>\r\n            <option value='Manager'>Manager</option>\r\n            <option value='Student or Learning'>Student or Learning</option>\r\n            <option value='Instructor'>Instructor or Teacher</option>\r\n            <option value='Intern'>Intern</option>\r\n            <option value='Other'>Other</option>\r\n          </select>\r\n          <small className='form-text'>Give us an idea of where you are at in your career</small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>Could be your own company or one you work for</small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Website'\r\n            name='website'\r\n            value={website}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>Could be your own or a company website</small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>City & state suggested (eg. Boston, MA)</small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Skills'\r\n            name='skills'\r\n            value={skills}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Github Username'\r\n            name='githubusername'\r\n            value={githubusername}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <small className='form-text'>\r\n            If you want your latest repos and a Github link, include your username\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className='my-2'>\r\n          <button\r\n            onClick={() => {\r\n              toggleSocialInputs(!displaySocialInputs);\r\n            }}\r\n            type='button'\r\n            className='btn btn-light'>\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n        {displaySocialInputs && (\r\n          <Fragment>\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-twitter fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Twitter URL'\r\n                name='twitter'\r\n                value={twitter}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-facebook fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Facebook URL'\r\n                name='facebook'\r\n                value={facebook}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-youtube fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='YouTube URL'\r\n                name='youtube'\r\n                value={youtube}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-linkedin fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Linkedin URL'\r\n                name='linkedin'\r\n                value={linkedin}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n\r\n            <div className='form-group social-input'>\r\n              <i className='fab fa-instagram fa-2x'></i>\r\n              <input\r\n                type='text'\r\n                placeholder='Instagram URL'\r\n                name='instagram'\r\n                value={instagram}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\AddExperience.js",["137","138","139"],"import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 class='large text-primary'>Add An Experience</h1>\r\n      <p class='lead'>\r\n        <i class='fas fa-code-branch'></i> Add any developer/programming positions that you have had\r\n        in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        class='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Job Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Company'\r\n            name='company'\r\n            value={company}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>From Date</h4>\r\n          <input type='date' name='from' value={from} onChange={(e) => onChange(e)} />\r\n        </div>\r\n        <div class='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              checked={current}\r\n              name='current'\r\n              value=''\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div class='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div class='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Job Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}></textarea>\r\n        </div>\r\n        <input type='submit' class='btn btn-primary my-1' />\r\n        <a class='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addExperience })(AddExperience);\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profile-forms\\AddEducation.js",["140","141","142"],"import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: '',\r\n  });\r\n\r\n  const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n  const { school, degree, fieldofstudy, from, to, current, description } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add Your Education</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-code-branch'></i> Add any school/bootcamp that you have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className='form'\r\n        onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* School or Bootcamp'\r\n            name='school'\r\n            value={school}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='* Degree or Certificate'\r\n            name='degree'\r\n            value={degree}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Field of Study'\r\n            name='fieldofstudy'\r\n            value={fieldofstudy}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>From Date</h4>\r\n          <input type='date' name='from' value={from} onChange={(e) => onChange(e)} />\r\n        </div>\r\n        <div className='form-group'>\r\n          <p>\r\n            <input\r\n              type='checkbox'\r\n              checked={current}\r\n              name='current'\r\n              value=''\r\n              value={current}\r\n              onChange={(e) => {\r\n                setFormData({ ...formData, current: !current });\r\n                toggleDisabled(!toDateDisabled);\r\n              }}\r\n            />{' '}\r\n            Current Study\r\n          </p>\r\n        </div>\r\n        <div className='form-group'>\r\n          <h4>To Date</h4>\r\n          <input\r\n            type='date'\r\n            name='to'\r\n            value={to}\r\n            onChange={(e) => onChange(e)}\r\n            disabled={toDateDisabled ? 'disabled' : ''}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            name='description'\r\n            cols='30'\r\n            rows='5'\r\n            placeholder='Program Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <a className='btn btn-light my-1' href='dashboard.html'>\r\n          Go Back\r\n        </a>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { addEducation })(AddEducation);\r\n","C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Experience.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\dashboard\\Education.js",[],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profiles\\Profiles.js",["143","144"],"C:\\Users\\asus\\PhpstormProjects\\Nodejs\\MERN-DevConnector\\client\\src\\components\\profiles\\ProfileItem.js",["145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":4,"column":1,"nodeType":"152","endLine":17,"endColumn":2},{"ruleId":"150","severity":1,"message":"151","line":19,"column":1,"nodeType":"152","endLine":56,"endColumn":2},{"ruleId":"153","severity":1,"message":"154","line":19,"column":6,"nodeType":"155","endLine":19,"endColumn":8,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":197,"column":13,"nodeType":"159","messageId":"160","endLine":197,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":18,"column":1,"nodeType":"152","endLine":57,"endColumn":2},{"ruleId":"150","severity":1,"message":"161","line":4,"column":1,"nodeType":"152","endLine":8,"endColumn":3},{"ruleId":"153","severity":1,"message":"162","line":47,"column":6,"nodeType":"155","endLine":47,"endColumn":15,"suggestions":"163"},{"ruleId":"157","severity":1,"message":"164","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":14},{"ruleId":"157","severity":1,"message":"165","line":5,"column":16,"nodeType":"159","messageId":"160","endLine":5,"endColumn":26},{"ruleId":"166","severity":1,"message":"167","line":78,"column":15,"nodeType":"168","endLine":78,"endColumn":30},{"ruleId":"157","severity":1,"message":"164","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":14},{"ruleId":"157","severity":1,"message":"165","line":5,"column":16,"nodeType":"159","messageId":"160","endLine":5,"endColumn":26},{"ruleId":"166","severity":1,"message":"167","line":77,"column":15,"nodeType":"168","endLine":77,"endColumn":30},{"ruleId":"157","severity":1,"message":"169","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":15},{"ruleId":"153","severity":1,"message":"170","line":12,"column":6,"nodeType":"155","endLine":12,"endColumn":8,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":16,"column":7,"nodeType":"174","endLine":16,"endColumn":47},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["177"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', 'profile.company', 'profile.githubusername', 'profile.location', 'profile.skills', 'profile.social', 'profile.status', and 'profile.website'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["178"],"'Link' is defined but never used.","'withRouter' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'profile' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["179"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"186","text":"187"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",{"range":"188","text":"189"},"Update the dependencies array to be: [getProfiles]",{"range":"190","text":"191"},[597,599],"[getCurrentProfile]",[1691,1700],"[getCurrentProfile, loading, profile.bio, profile.company, profile.githubusername, profile.location, profile.skills, profile.social, profile.status, profile.website]",[436,438],"[getProfiles]"]